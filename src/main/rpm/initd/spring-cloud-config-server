#!/bin/sh
#
# spring-cloud-config-server.sysconfig
#
# chkconfig:   345 20 80
# description: A convenient web frontend to manage Office accounts
#

### BEGIN INIT INFO
# Provides: spring-cloud-config-server.sysconfig
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: A convenient web frontend to manage Office accounts
# Description: Create, update, delete and list/search Office accounts via a convenient web frontend.
### END INIT INFO

# Configure application
EXEC="/usr/bin/java"
PROG="spring-cloud-config-server"
APP_HOME="/usr/share/${PROG}/"
CONF_HOME="/etc/${PROG}/"
USER="${PROG}"
JARFILE="/usr/share/spring-cloud-config-server/lib/spring-cloud-config-server.jar"
LOCKFILE="/var/lock/subsys/${PROG}"
PIDFILE="/var/run/${PROG}.pid"
JAVA_OPTS="-Xms128m -Xmx512m"

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network


[ -e /etc/sysconfig/${PROG} ] && . /etc/sysconfig/${PROG}

# Allow overwriting RUN_MODE from sysconfig
SPRING_OPTS="--spring.config.name=spring-cloud-config-server"
SPRING_OPTS="${SPRING_OPTS} --spring.config.location=file:///etc/spring-cloud-config-server/"
SPRING_OPTS="${SPRING_OPTS} --logging.config=file:///etc/spring-cloud-config-server/logback.xml"

start() {
    [ -x ${EXEC} ] || exit 5
    [ -d ${CONF_HOME} ] || exit 6
    # Check that networking is up.
    [ "${NETWORKING}" = "no" ] && exit 1
    echo -n $"Starting ${PROG}: "
    if [ ${EUID} -ne 0 ]; then
        retval=1
        failure
    elif [ -s ${PIDFILE} ]; then
        retval=1
        echo -n $"already running.."
        failure
    else
        daemonize -u ${USER} -p ${PIDFILE} -c ${APP_HOME} ${EXEC} ${JAVA_OPTS} -jar ${JARFILE} ${SPRING_OPTS} && success || failure
        retval=$?
        [ ${retval} -eq 0 ] && touch ${LOCKFILE}
    fi;
    echo
    return ${retval}
}

stop() {
    echo -n $"Stopping ${PROG}: "
    if [ ${EUID} -ne 0 ]; then
        retval=1
        failure
    else
        killproc -p ${PIDFILE} ${PROG}
        retval=$?
        [ ${retval} -eq 0 ] && rm -f ${LOCKFILE}
    fi;
    echo
    return ${retval}
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    status -p ${PIDFILE} ${PROG}
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
